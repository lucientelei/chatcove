spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/chatcove?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
    username: root
    password: root
    hikari:
      max-lifetime: 30000
      idle-timeout: 1000
      tomcat:
        max-wait: 1000
        max-idle: 10
        max-active: 1000
  devtools:
    restart:
      enabled: true
      poll-interval: 5s
      quiet-period: 3s
  #kafka
#  kafka:
#    # 节点，多个节点逗号分开
#    bootstrap-servers: 127.0.0.1:9092
#    # 生产者
#    producer:
#      # 重试次数
#      retries: 3
#      batch-size: 16384
#      buffer-memory: 33554432
#      acks: 1
#      # 指定消息key和消息体的编解码方式
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    consumer:
#      group-id: default-group
#      # 是否自动确认
#      enable-auto-commit: false
#      auto-offset-reset: earliest
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    listener:
#      # 当每一条记录被消费者监听器（ListenerConsumer）处理之后提交
#      # RECORD
#      # 当每一批poll()的数据被消费者监听器（ListenerConsumer）处理之后提交
#      # BATCH
#      # 当每一批poll()的数据被消费者监听器（ListenerConsumer）处理之后，距离上次提交时间大于TIME时提交
#      # TIME
#      # 当每一批poll()的数据被消费者监听器（ListenerConsumer）处理之后，被处理record数量大于等于COUNT时提交
#      # COUNT
#      # TIME |　COUNT　有一个条件满足时提交
#      # COUNT_TIME
#      # 当每一批poll()的数据被消费者监听器（ListenerConsumer）处理之后, 手动调用Acknowledgment.acknowledge()后提交
#      # MANUAL
#      # 手动调用Acknowledgment.acknowledge()后立即提交，一般使用这种
#      # MANUAL_IMMEDIATE
#      ack-mode: manual_immediate